"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  BasicChat: () => BasicChatBot_default
});
module.exports = __toCommonJS(src_exports);

// src/BasicChatBot/context.tsx
var import_react = require("react");
var import_openai = __toESM(require("openai"), 1);
var import_jsx_runtime = require("react/jsx-runtime");
var BasicChatBot = (0, import_react.createContext)({});
function BasicChatBotProvider({
  children
}) {
  const [message, setMessage] = (0, import_react.useState)("");
  const [chats, setChats] = (0, import_react.useState)([]);
  const [isTyping, setIsTyping] = (0, import_react.useState)(false);
  const [openAiApiKey, setOpenAiApiKey] = (0, import_react.useState)("");
  const [chatTitle, setChatTitle] = (0, import_react.useState)("");
  const [systemPrompt, setSystemPrompt] = (0, import_react.useState)("");
  const basicChat = async () => {
    if (!message)
      return;
    const openai = new import_openai.default({
      apiKey: openAiApiKey,
      dangerouslyAllowBrowser: true
    });
    setIsTyping(true);
    scrollTo(0, 1e10);
    const msgs = chats;
    msgs.push({ role: "user", content: message });
    setChats(msgs);
    setMessage("");
    await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: systemPrompt ? systemPrompt : ""
        },
        ...chats
      ]
    }).then((res) => {
      msgs.push(res.choices[0].message);
      setChats(msgs);
      setIsTyping(false);
      scrollTo(0, 1e10);
    }).catch((error) => {
      console.log(error);
    });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    BasicChatBot.Provider,
    {
      value: {
        message,
        setMessage,
        chats,
        setChats,
        isTyping,
        setIsTyping,
        basicChat,
        openAiApiKey,
        setOpenAiApiKey,
        chatTitle,
        setChatTitle,
        systemPrompt,
        setSystemPrompt
      },
      children
    }
  );
}

// src/BasicChatBot/Layer.tsx
var import_react6 = require("react");

// src/BasicChatBot/Body.tsx
var import_react2 = require("react");
var import_react_markdown = __toESM(require("react-markdown"), 1);
var import_material = require("@mui/material");
var import_jsx_runtime2 = require("react/jsx-runtime");
function Body() {
  const { isTyping, chats } = (0, import_react2.useContext)(BasicChatBot);
  const ref = (0, import_react2.useRef)(null);
  (0, import_react2.useEffect)(() => {
    ref.current?.scrollIntoView({
      behavior: "smooth",
      block: "end"
    });
  }, [chats]);
  const userStyle = {
    backgroundColor: "#61677A",
    ml: "25%",
    display: "flex",
    flexDirection: "row-reverse"
  };
  const assistantStyle = {
    backgroundColor: "#000000",
    width: "75%"
  };
  const generalStyle = {
    color: "white",
    padding: 1,
    mb: 2,
    borderRadius: 2
  };
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsxs)(
    import_material.Box,
    {
      component: "main",
      sx: {
        maxWidth: "100vw",
        pb: 10,
        height: "auto",
        backgroundColor: "#EBECF1"
      },
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("section", { style: { padding: 10 }, children: chats && chats.length ? chats.map((chat, index) => /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
          import_material.Box,
          {
            component: "p",
            sx: chat.role === "user" ? { ...userStyle, ...generalStyle } : chat.role === "assistant" ? { ...assistantStyle, ...generalStyle } : {},
            children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("span", { children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(import_react_markdown.default, { children: chat.content }) })
          },
          index
        )) : "" }),
        /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
          import_material.Box,
          {
            component: "section",
            sx: {
              ...assistantStyle,
              ...generalStyle,
              visibility: isTyping ? "visible" : "hidden",
              ml: 1
            },
            children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("p", { children: /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("i", { children: isTyping ? "Typing" : "" }) })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime2.jsx)("div", { ref })
      ]
    }
  );
}

// src/BasicChatBot/Form.tsx
var import_react4 = require("react");

// src/BasicChatBot/components/input.tsx
var import_material2 = require("@mui/material");
var import_react3 = require("react");
var import_jsx_runtime3 = require("react/jsx-runtime");
function Input(props) {
  const { isTyping } = (0, import_react3.useContext)(BasicChatBot);
  const {
    placeholder,
    setter,
    value,
    type,
    register,
    name,
    error,
    helperText,
    startAdornment,
    endAdornment,
    disabled
  } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_material2.Box, { children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
    import_material2.TextField,
    {
      autoFocus: true,
      disabled: disabled || isTyping,
      id: name,
      fullWidth: true,
      name,
      error,
      ...register ? { ...register(name) } : "",
      helperText,
      color: "primary",
      value,
      type,
      placeholder,
      onChange: (e) => setter(e.target.value),
      InputProps: {
        startAdornment: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_material2.InputAdornment, { position: "start", sx: { cursor: "pointer" }, children: startAdornment }),
        endAdornment: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(import_material2.InputAdornment, { position: "end", sx: { cursor: "pointer" }, children: endAdornment })
      }
    }
  ) });
}

// src/BasicChatBot/Form.tsx
var import_material4 = require("@mui/material");

// src/BasicChatBot/components/SendBtn.tsx
var import_icons_material = require("@mui/icons-material");

// src/BasicChatBot/components/btn.tsx
var import_material3 = require("@mui/material");
var import_jsx_runtime4 = require("react/jsx-runtime");
function Btn(props) {
  const { variant, href, label, sx, icon, handleClick, iconL, autoFocus } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(
    import_material3.Button,
    {
      variant,
      href,
      sx: { ...sx, textTransform: "capitalize" },
      onClick: () => handleClick(),
      autoFocus,
      children: [
        iconL,
        label,
        icon
      ]
    }
  );
}

// src/BasicChatBot/components/SendBtn.tsx
var import_jsx_runtime5 = require("react/jsx-runtime");
function SendBtn(props) {
  const { handleSubmit } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(Btn, { icon: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(import_icons_material.Send, { sx: {} }), handleClick: () => handleSubmit() });
}

// src/BasicChatBot/Form.tsx
var import_jsx_runtime6 = require("react/jsx-runtime");
function Form() {
  const { basicChat, setMessage, message } = (0, import_react4.useContext)(BasicChatBot);
  const chat = async (e) => {
    e ? e.preventDefault() : "";
    basicChat();
  };
  return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
    import_material4.Box,
    {
      component: "form",
      action: "",
      onSubmit: (e) => chat(e),
      sx: {
        position: "fixed",
        bottom: 0,
        width: "100%",
        backgroundColor: "white"
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        Input,
        {
          type: "text",
          name: "message",
          value: message,
          placeholder: "Enter message here...",
          setter: setMessage,
          endAdornment: /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SendBtn, { handleSubmit: chat })
        }
      )
    }
  );
}

// src/BasicChatBot/heading.tsx
var import_material5 = require("@mui/material");
var import_react5 = require("react");
var import_jsx_runtime7 = require("react/jsx-runtime");
function Heading() {
  const { chatTitle } = (0, import_react5.useContext)(BasicChatBot);
  return /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
    import_material5.Box,
    {
      component: "section",
      sx: {
        margin: 0,
        backgroundColor: "black",
        color: "white",
        padding: 2,
        position: "sticky",
        top: 0,
        borderBottom: "1px solid white"
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(import_material5.Box, { component: "h1", children: chatTitle })
    }
  );
}

// src/BasicChatBot/Layer.tsx
var import_material6 = require("@mui/material");
var import_jsx_runtime8 = require("react/jsx-runtime");
function Layer(props) {
  const { openAiApiKey, chatTitle, systemPrompt } = props;
  const { chats, setOpenAiApiKey, setChatTitle, setSystemPrompt } = (0, import_react6.useContext)(BasicChatBot);
  (0, import_react6.useEffect)(() => {
    setOpenAiApiKey(openAiApiKey);
    setChatTitle(chatTitle);
    setSystemPrompt(systemPrompt);
  }, []);
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsxs)(
    import_material6.Paper,
    {
      component: "div",
      sx: {
        position: chats && chats.length ? "absolute" : "relative",
        backgroundColor: "#EBECF1",
        height: "100vh",
        width: "100vw"
      },
      square: true,
      elevation: 0,
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Heading, {}),
        /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Body, {}),
        /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Form, {})
      ]
    }
  );
}

// src/BasicChatBot/index.tsx
var import_jsx_runtime9 = require("react/jsx-runtime");
function BasicChat(props) {
  const { openAiApiKey, chatTitle, systemPrompt } = props;
  return /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(BasicChatBotProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
    Layer,
    {
      openAiApiKey,
      chatTitle,
      systemPrompt
    }
  ) });
}
var BasicChatBot_default = BasicChat;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  BasicChat
});
